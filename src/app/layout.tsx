"use client";
import "./globals.css";
import { useLayoutEffect, useEffect, useState } from "react";
import type { Metadata } from "next";
import { Barlow } from "next/font/google";

import NavBar from "../components/NavBar";
import Footer from "../components/Footer";
import Provider from "@/app/Provider";

import "react-datepicker/dist/react-datepicker.css";

import { usePathname } from "next/navigation";
import SGDS from "@/components/SGDS";

import { store } from "@/redux/index";
import { useRouter } from "next/navigation";
import TimeoutPrompt from "@/components/TimeoutPrompt";
import LoadingOverlay from "@/components/LoadingCustom";

const barlow = Barlow({ subsets: ["latin"], weight: "400" });

const metadata: Metadata = {
  title: "Home | JTC",
  // description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const pathname = usePathname();
  const router = useRouter();
  const [showPopup, setShowPopup] = useState<boolean>(false);
  const isExistToken = store.getState().user.token;
  const isShowNavBar = pathname === "/login" || pathname === '/password/forgot' || pathname === '/password/reset';

  const debounce = (fn: Function, delay: number) => {
    let timmer: NodeJS.Timeout;
    return function () {
      if (timmer) clearTimeout(timmer);
      timmer = setTimeout(() => {
        fn();
      }, delay);
    };
  };

  const resizeFn = () => {
    store.dispatch({
      type: "SET_CURRENT_WIDTH",
      data: window.innerWidth,
    });
  };

  useEffect(() => {
    window.addEventListener("resize", debounce(resizeFn, 500));

    return window.removeEventListener("resize", debounce(resizeFn, 500));
  }, []);

  useLayoutEffect(() => {
    resizeFn();
  });

  useEffect(() => {
    let timer: any;
    const resetTimer = () => {
      clearTimeout(timer);
      timer = setTimeout(() => {
        setShowPopup(true);
        }, 1000 * 60 * 15);
      // }, 10000);

      window.addEventListener("mousemove", resetTimer);
      window.addEventListener("keydown", resetTimer);
      window.addEventListener("scroll", resetTimer);
    };

    if (pathname !== '/login' && pathname !== '/password/forgot' && pathname !== '/password/reset') {
      resetTimer();

      // if (!isExistToken) {
      //   router.push('/login');
      // }
    }

    return () => {
      clearTimeout(timer);
      window.removeEventListener("mousemove", resetTimer);
      window.removeEventListener("keydown", resetTimer);
      window.removeEventListener("scroll", resetTimer);
    };
  }, [pathname]);

  const handleClickHiddenDialog = (params: boolean) => {
    setShowPopup(params);
  }

  return (
    <html lang="en">
      <head>
        <script
          type="module"
          src="https://cdn.jsdelivr.net/npm/@govtechsg/sgds-web-component/Masthead/index.js"
          async
        ></script>
        <script
          src="https://ap-gateway.mastercard.com/static/checkout/checkout.min.js"
          async
        ></script>
      </head>
      <body className={barlow.className}>
        <Provider>
          {showPopup && <TimeoutPrompt show={(params: boolean) => handleClickHiddenDialog(params)} isShowProps={showPopup} />}
          {isShowNavBar ? <SGDS /> : <NavBar />}
          {isShowNavBar ? "" : <div className="h-[90px] sm:h-[110px]"></div>}
          <div className="flex flex-col rel">
            {children}
          </div>
          <Footer />
        </Provider>
      </body>
    </html>
  );
  // return (
  //   // (isExistToken || isShowNavBar) ?
  //   //   (
  //       <html lang="en">
  //         <head>
  //           <script
  //             type="module"
  //             src="https://cdn.jsdelivr.net/npm/@govtechsg/sgds-web-component/Masthead/index.js"
  //             async
  //           ></script>
  //           <script
  //             src="https://ap-gateway.mastercard.com/static/checkout/checkout.min.js"
  //             async
  //           ></script>
  //         </head>
  //         <body className={barlow.className}>
  //           <Provider>
  //             {showPopup && <TimeoutPrompt show={(params: boolean) => handleClickHiddenDialog(params)} />}
  //             {isShowNavBar ? <SGDS /> : <NavBar />}
  //             {isShowNavBar ? "" : <div className="h-[120px]"></div>}
  //             <div className="flex flex-col rel">
  //               {children}
  //             </div>
  //             <Footer />
  //           </Provider>
  //         </body>
  //       </html>
  // //     ) : (
  // //       <html lang="en">
  // //         <head>
  // //           <script
  // //             type="module"
  // //             src="https://cdn.jsdelivr.net/npm/@govtechsg/sgds-web-component/Masthead/index.js"
  // //             async
  // //           ></script>
  // //           <script
  // //             src="https://ap-gateway.mastercard.com/static/checkout/checkout.min.js"
  // //             async
  // //           ></script>
  // //         </head>
  // //         <body className={barlow.className}>
  // //           <LoadingOverlay />
  // //         </body>
  // //       </html>
  // //     )
  // );
}